// source: akari_proto/joints_controller.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.akari_proto.GetJointNamesResponse', null, global);
goog.exportSymbol('proto.akari_proto.GetMovingStateResponse', null, global);
goog.exportSymbol('proto.akari_proto.GetPositionLimitResponse', null, global);
goog.exportSymbol('proto.akari_proto.GetPresentPositionResponse', null, global);
goog.exportSymbol('proto.akari_proto.GetProfileAccelerationResponse', null, global);
goog.exportSymbol('proto.akari_proto.GetProfileVelocityResponse', null, global);
goog.exportSymbol('proto.akari_proto.GetServoEnabledResponse', null, global);
goog.exportSymbol('proto.akari_proto.JointSpecifier', null, global);
goog.exportSymbol('proto.akari_proto.SetGoalPositionRequest', null, global);
goog.exportSymbol('proto.akari_proto.SetProfileAccelerationRequest', null, global);
goog.exportSymbol('proto.akari_proto.SetProfileVelocityRequest', null, global);
goog.exportSymbol('proto.akari_proto.SetServoEnabledRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.JointSpecifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.JointSpecifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.JointSpecifier.displayName = 'proto.akari_proto.JointSpecifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetPositionLimitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.GetPositionLimitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetPositionLimitResponse.displayName = 'proto.akari_proto.GetPositionLimitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetJointNamesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.akari_proto.GetJointNamesResponse.repeatedFields_, null);
};
goog.inherits(proto.akari_proto.GetJointNamesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetJointNamesResponse.displayName = 'proto.akari_proto.GetJointNamesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetServoEnabledResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.GetServoEnabledResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetServoEnabledResponse.displayName = 'proto.akari_proto.GetServoEnabledResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.SetServoEnabledRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.SetServoEnabledRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.SetServoEnabledRequest.displayName = 'proto.akari_proto.SetServoEnabledRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.SetProfileAccelerationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.SetProfileAccelerationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.SetProfileAccelerationRequest.displayName = 'proto.akari_proto.SetProfileAccelerationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetProfileAccelerationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.GetProfileAccelerationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetProfileAccelerationResponse.displayName = 'proto.akari_proto.GetProfileAccelerationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.SetProfileVelocityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.SetProfileVelocityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.SetProfileVelocityRequest.displayName = 'proto.akari_proto.SetProfileVelocityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetProfileVelocityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.GetProfileVelocityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetProfileVelocityResponse.displayName = 'proto.akari_proto.GetProfileVelocityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.SetGoalPositionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.SetGoalPositionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.SetGoalPositionRequest.displayName = 'proto.akari_proto.SetGoalPositionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetPresentPositionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.GetPresentPositionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetPresentPositionResponse.displayName = 'proto.akari_proto.GetPresentPositionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.akari_proto.GetMovingStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.akari_proto.GetMovingStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.akari_proto.GetMovingStateResponse.displayName = 'proto.akari_proto.GetMovingStateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.JointSpecifier.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.JointSpecifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.JointSpecifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.JointSpecifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    jointName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.JointSpecifier}
 */
proto.akari_proto.JointSpecifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.JointSpecifier;
  return proto.akari_proto.JointSpecifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.JointSpecifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.JointSpecifier}
 */
proto.akari_proto.JointSpecifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJointName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.JointSpecifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.JointSpecifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.JointSpecifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.JointSpecifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJointName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string joint_name = 1;
 * @return {string}
 */
proto.akari_proto.JointSpecifier.prototype.getJointName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.akari_proto.JointSpecifier} returns this
 */
proto.akari_proto.JointSpecifier.prototype.setJointName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetPositionLimitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetPositionLimitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetPositionLimitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetPositionLimitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    max: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetPositionLimitResponse}
 */
proto.akari_proto.GetPositionLimitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetPositionLimitResponse;
  return proto.akari_proto.GetPositionLimitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetPositionLimitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetPositionLimitResponse}
 */
proto.akari_proto.GetPositionLimitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetPositionLimitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetPositionLimitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetPositionLimitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetPositionLimitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float min = 1;
 * @return {number}
 */
proto.akari_proto.GetPositionLimitResponse.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.GetPositionLimitResponse} returns this
 */
proto.akari_proto.GetPositionLimitResponse.prototype.setMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float max = 2;
 * @return {number}
 */
proto.akari_proto.GetPositionLimitResponse.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.GetPositionLimitResponse} returns this
 */
proto.akari_proto.GetPositionLimitResponse.prototype.setMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.akari_proto.GetJointNamesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetJointNamesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetJointNamesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetJointNamesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetJointNamesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    jointNamesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetJointNamesResponse}
 */
proto.akari_proto.GetJointNamesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetJointNamesResponse;
  return proto.akari_proto.GetJointNamesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetJointNamesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetJointNamesResponse}
 */
proto.akari_proto.GetJointNamesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addJointNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetJointNamesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetJointNamesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetJointNamesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetJointNamesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJointNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string joint_names = 1;
 * @return {!Array<string>}
 */
proto.akari_proto.GetJointNamesResponse.prototype.getJointNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.akari_proto.GetJointNamesResponse} returns this
 */
proto.akari_proto.GetJointNamesResponse.prototype.setJointNamesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.akari_proto.GetJointNamesResponse} returns this
 */
proto.akari_proto.GetJointNamesResponse.prototype.addJointNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.akari_proto.GetJointNamesResponse} returns this
 */
proto.akari_proto.GetJointNamesResponse.prototype.clearJointNamesList = function() {
  return this.setJointNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetServoEnabledResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetServoEnabledResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetServoEnabledResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetServoEnabledResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetServoEnabledResponse}
 */
proto.akari_proto.GetServoEnabledResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetServoEnabledResponse;
  return proto.akari_proto.GetServoEnabledResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetServoEnabledResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetServoEnabledResponse}
 */
proto.akari_proto.GetServoEnabledResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetServoEnabledResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetServoEnabledResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetServoEnabledResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetServoEnabledResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.akari_proto.GetServoEnabledResponse.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akari_proto.GetServoEnabledResponse} returns this
 */
proto.akari_proto.GetServoEnabledResponse.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.SetServoEnabledRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.SetServoEnabledRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.SetServoEnabledRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetServoEnabledRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetJoint: (f = msg.getTargetJoint()) && proto.akari_proto.JointSpecifier.toObject(includeInstance, f),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.SetServoEnabledRequest}
 */
proto.akari_proto.SetServoEnabledRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.SetServoEnabledRequest;
  return proto.akari_proto.SetServoEnabledRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.SetServoEnabledRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.SetServoEnabledRequest}
 */
proto.akari_proto.SetServoEnabledRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akari_proto.JointSpecifier;
      reader.readMessage(value,proto.akari_proto.JointSpecifier.deserializeBinaryFromReader);
      msg.setTargetJoint(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.SetServoEnabledRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.SetServoEnabledRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.SetServoEnabledRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetServoEnabledRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetJoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akari_proto.JointSpecifier.serializeBinaryToWriter
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional JointSpecifier target_joint = 1;
 * @return {?proto.akari_proto.JointSpecifier}
 */
proto.akari_proto.SetServoEnabledRequest.prototype.getTargetJoint = function() {
  return /** @type{?proto.akari_proto.JointSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.akari_proto.JointSpecifier, 1));
};


/**
 * @param {?proto.akari_proto.JointSpecifier|undefined} value
 * @return {!proto.akari_proto.SetServoEnabledRequest} returns this
*/
proto.akari_proto.SetServoEnabledRequest.prototype.setTargetJoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akari_proto.SetServoEnabledRequest} returns this
 */
proto.akari_proto.SetServoEnabledRequest.prototype.clearTargetJoint = function() {
  return this.setTargetJoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akari_proto.SetServoEnabledRequest.prototype.hasTargetJoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool enabled = 2;
 * @return {boolean}
 */
proto.akari_proto.SetServoEnabledRequest.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akari_proto.SetServoEnabledRequest} returns this
 */
proto.akari_proto.SetServoEnabledRequest.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.SetProfileAccelerationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.SetProfileAccelerationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetProfileAccelerationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetJoint: (f = msg.getTargetJoint()) && proto.akari_proto.JointSpecifier.toObject(includeInstance, f),
    radPerSec2: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.SetProfileAccelerationRequest}
 */
proto.akari_proto.SetProfileAccelerationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.SetProfileAccelerationRequest;
  return proto.akari_proto.SetProfileAccelerationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.SetProfileAccelerationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.SetProfileAccelerationRequest}
 */
proto.akari_proto.SetProfileAccelerationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akari_proto.JointSpecifier;
      reader.readMessage(value,proto.akari_proto.JointSpecifier.deserializeBinaryFromReader);
      msg.setTargetJoint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRadPerSec2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.SetProfileAccelerationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.SetProfileAccelerationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetProfileAccelerationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetJoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akari_proto.JointSpecifier.serializeBinaryToWriter
    );
  }
  f = message.getRadPerSec2();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional JointSpecifier target_joint = 1;
 * @return {?proto.akari_proto.JointSpecifier}
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.getTargetJoint = function() {
  return /** @type{?proto.akari_proto.JointSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.akari_proto.JointSpecifier, 1));
};


/**
 * @param {?proto.akari_proto.JointSpecifier|undefined} value
 * @return {!proto.akari_proto.SetProfileAccelerationRequest} returns this
*/
proto.akari_proto.SetProfileAccelerationRequest.prototype.setTargetJoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akari_proto.SetProfileAccelerationRequest} returns this
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.clearTargetJoint = function() {
  return this.setTargetJoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.hasTargetJoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float rad_per_sec2 = 2;
 * @return {number}
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.getRadPerSec2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.SetProfileAccelerationRequest} returns this
 */
proto.akari_proto.SetProfileAccelerationRequest.prototype.setRadPerSec2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetProfileAccelerationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetProfileAccelerationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetProfileAccelerationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetProfileAccelerationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    radPerSec2: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetProfileAccelerationResponse}
 */
proto.akari_proto.GetProfileAccelerationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetProfileAccelerationResponse;
  return proto.akari_proto.GetProfileAccelerationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetProfileAccelerationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetProfileAccelerationResponse}
 */
proto.akari_proto.GetProfileAccelerationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRadPerSec2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetProfileAccelerationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetProfileAccelerationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetProfileAccelerationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetProfileAccelerationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRadPerSec2();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
};


/**
 * optional float rad_per_sec2 = 1;
 * @return {number}
 */
proto.akari_proto.GetProfileAccelerationResponse.prototype.getRadPerSec2 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.GetProfileAccelerationResponse} returns this
 */
proto.akari_proto.GetProfileAccelerationResponse.prototype.setRadPerSec2 = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.SetProfileVelocityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.SetProfileVelocityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetProfileVelocityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetJoint: (f = msg.getTargetJoint()) && proto.akari_proto.JointSpecifier.toObject(includeInstance, f),
    radPerSec: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.SetProfileVelocityRequest}
 */
proto.akari_proto.SetProfileVelocityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.SetProfileVelocityRequest;
  return proto.akari_proto.SetProfileVelocityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.SetProfileVelocityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.SetProfileVelocityRequest}
 */
proto.akari_proto.SetProfileVelocityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akari_proto.JointSpecifier;
      reader.readMessage(value,proto.akari_proto.JointSpecifier.deserializeBinaryFromReader);
      msg.setTargetJoint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRadPerSec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.SetProfileVelocityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.SetProfileVelocityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetProfileVelocityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetJoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akari_proto.JointSpecifier.serializeBinaryToWriter
    );
  }
  f = message.getRadPerSec();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional JointSpecifier target_joint = 1;
 * @return {?proto.akari_proto.JointSpecifier}
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.getTargetJoint = function() {
  return /** @type{?proto.akari_proto.JointSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.akari_proto.JointSpecifier, 1));
};


/**
 * @param {?proto.akari_proto.JointSpecifier|undefined} value
 * @return {!proto.akari_proto.SetProfileVelocityRequest} returns this
*/
proto.akari_proto.SetProfileVelocityRequest.prototype.setTargetJoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akari_proto.SetProfileVelocityRequest} returns this
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.clearTargetJoint = function() {
  return this.setTargetJoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.hasTargetJoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float rad_per_sec = 2;
 * @return {number}
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.getRadPerSec = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.SetProfileVelocityRequest} returns this
 */
proto.akari_proto.SetProfileVelocityRequest.prototype.setRadPerSec = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetProfileVelocityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetProfileVelocityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetProfileVelocityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetProfileVelocityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    radPerSec: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetProfileVelocityResponse}
 */
proto.akari_proto.GetProfileVelocityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetProfileVelocityResponse;
  return proto.akari_proto.GetProfileVelocityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetProfileVelocityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetProfileVelocityResponse}
 */
proto.akari_proto.GetProfileVelocityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRadPerSec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetProfileVelocityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetProfileVelocityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetProfileVelocityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetProfileVelocityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRadPerSec();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
};


/**
 * optional float rad_per_sec = 1;
 * @return {number}
 */
proto.akari_proto.GetProfileVelocityResponse.prototype.getRadPerSec = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.GetProfileVelocityResponse} returns this
 */
proto.akari_proto.GetProfileVelocityResponse.prototype.setRadPerSec = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.SetGoalPositionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.SetGoalPositionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.SetGoalPositionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetGoalPositionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetJoint: (f = msg.getTargetJoint()) && proto.akari_proto.JointSpecifier.toObject(includeInstance, f),
    rad: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.SetGoalPositionRequest}
 */
proto.akari_proto.SetGoalPositionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.SetGoalPositionRequest;
  return proto.akari_proto.SetGoalPositionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.SetGoalPositionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.SetGoalPositionRequest}
 */
proto.akari_proto.SetGoalPositionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.akari_proto.JointSpecifier;
      reader.readMessage(value,proto.akari_proto.JointSpecifier.deserializeBinaryFromReader);
      msg.setTargetJoint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRad(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.SetGoalPositionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.SetGoalPositionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.SetGoalPositionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.SetGoalPositionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetJoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.akari_proto.JointSpecifier.serializeBinaryToWriter
    );
  }
  f = message.getRad();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional JointSpecifier target_joint = 1;
 * @return {?proto.akari_proto.JointSpecifier}
 */
proto.akari_proto.SetGoalPositionRequest.prototype.getTargetJoint = function() {
  return /** @type{?proto.akari_proto.JointSpecifier} */ (
    jspb.Message.getWrapperField(this, proto.akari_proto.JointSpecifier, 1));
};


/**
 * @param {?proto.akari_proto.JointSpecifier|undefined} value
 * @return {!proto.akari_proto.SetGoalPositionRequest} returns this
*/
proto.akari_proto.SetGoalPositionRequest.prototype.setTargetJoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.akari_proto.SetGoalPositionRequest} returns this
 */
proto.akari_proto.SetGoalPositionRequest.prototype.clearTargetJoint = function() {
  return this.setTargetJoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.akari_proto.SetGoalPositionRequest.prototype.hasTargetJoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float rad = 2;
 * @return {number}
 */
proto.akari_proto.SetGoalPositionRequest.prototype.getRad = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.SetGoalPositionRequest} returns this
 */
proto.akari_proto.SetGoalPositionRequest.prototype.setRad = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetPresentPositionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetPresentPositionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetPresentPositionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetPresentPositionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rad: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetPresentPositionResponse}
 */
proto.akari_proto.GetPresentPositionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetPresentPositionResponse;
  return proto.akari_proto.GetPresentPositionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetPresentPositionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetPresentPositionResponse}
 */
proto.akari_proto.GetPresentPositionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRad(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetPresentPositionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetPresentPositionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetPresentPositionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetPresentPositionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRad();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
};


/**
 * optional float rad = 1;
 * @return {number}
 */
proto.akari_proto.GetPresentPositionResponse.prototype.getRad = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.akari_proto.GetPresentPositionResponse} returns this
 */
proto.akari_proto.GetPresentPositionResponse.prototype.setRad = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.akari_proto.GetMovingStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.akari_proto.GetMovingStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.akari_proto.GetMovingStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetMovingStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    moving: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.akari_proto.GetMovingStateResponse}
 */
proto.akari_proto.GetMovingStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.akari_proto.GetMovingStateResponse;
  return proto.akari_proto.GetMovingStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.akari_proto.GetMovingStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.akari_proto.GetMovingStateResponse}
 */
proto.akari_proto.GetMovingStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMoving(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.akari_proto.GetMovingStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.akari_proto.GetMovingStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.akari_proto.GetMovingStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.akari_proto.GetMovingStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoving();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool moving = 1;
 * @return {boolean}
 */
proto.akari_proto.GetMovingStateResponse.prototype.getMoving = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.akari_proto.GetMovingStateResponse} returns this
 */
proto.akari_proto.GetMovingStateResponse.prototype.setMoving = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.akari_proto);
